# Generated by Django 3.1.7 on 2021-04-06 07:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EmployeeData',
            fields=[
                ('key', models.CharField(max_length=30, primary_key=True, serialize=False, verbose_name='键')),
                ('phases', models.IntegerField(help_text='精0:(0,1),精1:(2,3),精2:(4,5)', verbose_name='阶段')),
                ('range_id', models.CharField(max_length=10, verbose_name='攻击范围')),
                ('max_level', models.IntegerField(verbose_name='最大等级')),
                ('max_hp', models.IntegerField(verbose_name='最大血量')),
                ('atk', models.IntegerField(verbose_name='攻击')),
                ('defd', models.IntegerField(verbose_name='防御')),
                ('mag_res', models.IntegerField(verbose_name='法抗')),
                ('cost', models.IntegerField(verbose_name='部署费用')),
                ('block_cnt', models.IntegerField(verbose_name='阻挡数')),
                ('move_speed', models.FloatField(verbose_name='移动速度')),
                ('attack_speed', models.FloatField(verbose_name='攻速')),
                ('base_atk_time', models.FloatField(verbose_name='攻击间隔')),
                ('respqwn_time', models.IntegerField(verbose_name='再部署时间')),
                ('hp_rec_pre_sec', models.FloatField(verbose_name='生命恢复/秒')),
                ('sp_rec_pre_sec', models.FloatField(verbose_name='技能回复/秒')),
                ('max_deploy_cnt', models.IntegerField(verbose_name='最大召唤物数')),
                ('mass_level', models.IntegerField(verbose_name='重量')),
                ('base_force_level', models.IntegerField(verbose_name='嘲讽等级')),
                ('stun_immune', models.BooleanField(verbose_name='眩晕免疫')),
                ('silence_immune', models.BooleanField(verbose_name='沉默免疫')),
                ('sleep_immune', models.BooleanField(verbose_name='睡眠免疫')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeFavor',
            fields=[
                ('key', models.CharField(max_length=30, primary_key=True, serialize=False, unique=True, verbose_name='键')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeePotential',
            fields=[
                ('key', models.CharField(max_length=30, primary_key=True, serialize=False, unique=True, verbose_name='键')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeTalent',
            fields=[
                ('key', models.CharField(max_length=30, primary_key=True, serialize=False, unique=True, verbose_name='键')),
            ],
        ),
        migrations.CreateModel(
            name='EnemyData',
            fields=[
                ('key', models.CharField(max_length=30, primary_key=True, serialize=False, verbose_name='键')),
                ('level', models.IntegerField(verbose_name='等级')),
                ('max_hp', models.IntegerField(null=True, verbose_name='最大血量')),
                ('atk', models.IntegerField(null=True, verbose_name='攻击')),
                ('defd', models.IntegerField(null=True, verbose_name='防御')),
                ('mag_res', models.IntegerField(null=True, verbose_name='法抗')),
                ('cost', models.IntegerField(null=True, verbose_name='部署费用')),
                ('block_cnt', models.IntegerField(null=True, verbose_name='阻挡数')),
                ('move_speed', models.FloatField(null=True, verbose_name='移动速度')),
                ('attack_speed', models.FloatField(null=True, verbose_name='攻速')),
                ('base_atk_time', models.FloatField(null=True, verbose_name='攻击间隔')),
                ('respqwn_time', models.IntegerField(null=True, verbose_name='再部署时间')),
                ('hp_rec_pre_sec', models.FloatField(null=True, verbose_name='生命恢复/秒')),
                ('sp_rec_pre_sec', models.FloatField(null=True, verbose_name='技能回复/秒')),
                ('max_deploy_cnt', models.IntegerField(null=True, verbose_name='最大召唤物数')),
                ('mass_level', models.IntegerField(null=True, verbose_name='重量')),
                ('base_force_level', models.IntegerField(null=True, verbose_name='嘲讽等级')),
                ('stun_immune', models.BooleanField(verbose_name='眩晕免疫')),
                ('silence_immune', models.BooleanField(verbose_name='沉默免疫')),
                ('sleep_immune', models.BooleanField(verbose_name='睡眠免疫')),
            ],
        ),
        migrations.CreateModel(
            name='SkillsTable',
            fields=[
                ('key', models.CharField(max_length=30, primary_key=True, serialize=False, unique=True, verbose_name='键')),
            ],
        ),
        migrations.CreateModel(
            name='EnemyInfo',
            fields=[
                ('key', models.CharField(max_length=30, primary_key=True, serialize=False, unique=True, verbose_name='主键')),
                ('name', models.CharField(max_length=30, verbose_name='名字')),
                ('description', models.TextField(null=True, verbose_name='描述')),
                ('life_point_reduce', models.IntegerField(null=True, verbose_name='')),
                ('range_radius', models.FloatField(null=True, verbose_name='')),
                ('talent_black_board', models.CharField(max_length=20, null=True, verbose_name='')),
                ('skills', models.CharField(max_length=30, null=True, verbose_name='技能')),
                ('spdata', models.CharField(max_length=30, null=True, verbose_name='技力条')),
                ('info_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='param_data.enemydata')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeSkill',
            fields=[
                ('key', models.CharField(max_length=30, primary_key=True, serialize=False, unique=True, verbose_name='键')),
                ('skill_1', models.CharField(max_length=30, null=True, verbose_name='一技能')),
                ('skill_2', models.CharField(max_length=30, null=True, verbose_name='二技能')),
                ('skill_3', models.CharField(max_length=30, null=True, verbose_name='三技能')),
                ('skill_1_skills', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='skill_1', to='param_data.skillstable')),
                ('skill_2_skills', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='skill_2', to='param_data.skillstable')),
                ('skill_3_skills', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='skill_3', to='param_data.skillstable')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeInfo',
            fields=[
                ('key', models.CharField(max_length=30, primary_key=True, serialize=False, unique=True, verbose_name='主键')),
                ('name', models.CharField(max_length=20, verbose_name='名字')),
                ('appellation', models.CharField(max_length=20, verbose_name='称号')),
                ('description', models.TextField(max_length=100, verbose_name='描述')),
                ('position', models.CharField(choices=[('MELEE', '近战位'), ('RANGED', '远程位')], max_length=10, verbose_name='部署位')),
                ('max_potential_level', models.IntegerField(verbose_name='最大潜能')),
                ('rarity', models.IntegerField(verbose_name='稀有度')),
                ('profession', models.CharField(max_length=10, verbose_name='职业')),
                ('trait', models.CharField(max_length=10, null=True, verbose_name='特性')),
                ('info_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='param_data.employeedata')),
                ('info_favor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='param_data.employeefavor')),
                ('info_potential', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='param_data.employeepotential')),
                ('info_skill', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='param_data.employeeskill')),
                ('info_talent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='param_data.employeetalent')),
            ],
        ),
    ]
